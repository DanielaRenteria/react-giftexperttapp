{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2LAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAe9C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAhBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGrC,OACI,sBAAKc,UAAU,kCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAW,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECHd,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAsBtC,OAhBAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GAAI,OACNC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,YAM1B,CAACpB,IAGGqB,EDhB2BM,CAAa3B,GAAjCa,EAHwB,EAG9BN,KAAca,EAHgB,EAGhBA,QAEtB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,qDAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEfxBiB,EAAgB,WAAO,IAAD,EAEK1C,mBAAS,CAAC,WAFf,mBAExB2C,EAFwB,KAEZ5C,EAFY,KAS/B,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BAEQ4C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCpBjC8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3aafc7b5.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cate => [inputValue, ...cate]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Q8rudrJ94fJDfNi9z3uyp8xcX6QmAWyA`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__lightSpeedInLeft \">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","//import { data } from 'autoprefixer';\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GiftGrid = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounce\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">loading</p>}\r\n            <div className=\"card-grid animate__animated animate__fadeInTopLeft\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs =>\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                })\r\n\r\n\r\n            )\r\n    }, [category]);\r\n\r\n\r\n    return state// {data:[], loading:true}\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GiftGrid } from './components/GiftGrid';\r\n\r\nexport const GiftExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Naruto']);\r\n\r\n    // const handleAdd = () => {\r\n    //     //setCategories([...categories, 'Daniela']);\r\n    //     setCategories(cate => [...cate, 'Daniela'])\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GiftGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GiftExpertApp } from './GiftExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}